<#@ template language="C#" debug="false" hostspecific="true" #>
<#@ assembly name="System" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Entity" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>


<#+
public void GenerateRequestCqrsMapperConfiguration(string ns, string name, EnvDTE.CodeClass requestClass, EnvDTE.CodeClass cqrsClass) 
 {   
        var isIncoming = IsIncomingType(requestClass);
        var isOutgoing = IsOutgoingType(requestClass);
#>

namespace <#=ns#> {
/// <summary>
/// T4 Autogenerated code for Mapping
/// </summary>
public class <#= name #>Mappings : IHaveCustomMappings
    {
	    /// <summary>
        /// T4 Autogenerated code for Mapping
        /// </summary>
        public void CreateMappings(IMapperConfigurationExpression configuration)
        {
            <#+ if (isIncoming) { #>
            configuration.CreateMap<<#= requestClass.FullName #>, <#= cqrsClass.FullName#>>();
            <#+ 
       } 
#>

            <#+  if (isOutgoing) { #>
            configuration.CreateMap<<#= cqrsClass.FullName #>, <#= requestClass.FullName#>>();
            <#+ 
       } 
#>
        }
    }
}
<#+
    }
#>


<#+
public void GenerateNoRequestCqrsMappingFound(EnvDTE.CodeClass requestClass, string matchinCqrsName) 
 {
   
#>
//<#=requestClass.Name#>  (expect <#= matchinCqrsName #> )

<#+
    }
#>
